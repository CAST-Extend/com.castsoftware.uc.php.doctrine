<?php
namespace NatachaBundle\Repository;
use Doctrine\ORM\EntityRepository;

/**
 * AffaireRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AffaireRepository extends \Doctrine\ORM\EntityRepository
{
    public function searchAffaire($data, $limit = null, $isAdmin = false)
    {
        $searchType = $data['typeAffaire'];
        $searchData = $data['rechercheAffaire'];
        $qb = $this->createQueryBuilder('a')->addSelect('a');
        $qb->leftJoin('NatachaBundle:AffaireXS', 'axs', 'WITH', 'a.id = axs.id')
           ->leftJoin('NatachaBundle:AffaireC', 'ac', 'WITH', 'a.id = ac.id')
           ->leftJoin('NatachaBundle:AffaireD', 'ad', 'WITH', 'a.id = ad.id')
           ->leftJoin('NatachaBundle:AffaireR', 'ar', 'WITH', 'a.id = ar.id')
           ->leftJoin('a.typeAffaire', 'ta');

        foreach($searchType as $key => $type)
        {
            if($type === true)
            {
                if($key == "XS")
                {
                    $qb->andWhere(
                        $qb->expr()->orX(
                            $qb->expr()->eq('ta.identification', ':typeAffaireX'),
                            $qb->expr()->eq('ta.identification', ':typeAffaireS')
                        )
                    )->setParameter('typeAffaireX', 'X')
                     ->setParameter('typeAffaireS', 'S');
                }
                else
                {
                    $qb->andWhere('ta.identification = :typeAffaire')
                       ->setParameter('typeAffaire', $key);
                }            
            }
        }

       
        $result = $qb->getQuery()->getResult();
        return $result;
    }
	
}
